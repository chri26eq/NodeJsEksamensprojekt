import db from "./connection.js";

const deleteMode = process.argv.includes("--delete");

if (deleteMode) {  
  await db.run("DROP TABLE IF EXISTS user_cars;");
  await db.run("DROP TABLE IF EXISTS users;");
  await db.run("DROP TABLE IF EXISTS tracks;");
  await db.run("DROP TABLE IF EXISTS car_models;");
  await db.run("DROP TABLE IF EXISTS car_brands;");
  await db.run("DROP TABLE IF EXISTS countries;");
}

await db.exec(`
  CREATE TABLE IF NOT EXISTS countries (
    name TEXT NOT NULL,
    code TEXT PRIMARY KEY UNIQUE NOT NULL
  );


  CREATE TABLE IF NOT EXISTS car_brands (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    country_code TEXT,
    FOREIGN KEY (country_code) REFERENCES countries (code)
  );


  CREATE TABLE IF NOT EXISTS car_models (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    car_brand_id INTEGER NOT NULL,
    name TEXT NOT NULL,
    top_speed INTEGER NOT NULL,
    accel_0_to_100  INTEGER NOT NULL,
    handling  INTEGER NOT NULL,
    drivetrain TEXT CHECK(drivetrain IN ('FWD', 'RWD', '4X4')),
    tyres TEXT CHECK(tyres IN ('Standard', 'Performance', 'Slicks', 'All-terrain', 'Offroad')),
    FOREIGN KEY (car_brand_id) REFERENCES car_brands (id)
  );
  
  CREATE TABLE IF NOT EXISTS tracks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    length INTEGER NOT NULL,
    num_corners INTEGER NOT NULL,
    surface TEXT NOT NULL CHECK(surface IN ('Asphalt', 'Gravel', 'Dirt', 'Sand'))
  );

  CREATE TABLE IF NOT EXISTS users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    email TEXT UNIQUE NOT NULL,
    password TEXT NOT NULL,
    nickname TEXT UNIQUE NOT NULL,
    cash_balance INTEGER NOT NULL DEFAULT 10000
  );


  CREATE TABLE IF NOT EXISTS user_cars (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id       INTEGER NOT NULL,
    car_model_id  INTEGER NOT NULL,
    upgraded      BOOLEAN NOT NULL DEFAULT 0,
    favorite      BOOLEAN NOT NULL DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (car_model_id) REFERENCES car_models(id)
  );

  

  

  
`);

if (deleteMode) {
  await db.run(`
  INSERT INTO countries (name, code) VALUES
    ('Afghanistan', 'AF'),
    ('Åland Islands', 'AX'),
    ('Albania', 'AL'),
    ('Algeria', 'DZ'),
    ('American Samoa', 'AS'),
    ('Andorra', 'AD'),
    ('Angola', 'AO'),
    ('Anguilla', 'AI'),
    ('Antarctica', 'AQ'),
    ('Antigua and Barbuda', 'AG'),
    ('Argentina', 'AR'),
    ('Armenia', 'AM'),
    ('Aruba', 'AW'),
    ('Australia', 'AU'),
    ('Austria', 'AT'),
    ('Azerbaijan', 'AZ'),
    ('Bahamas', 'BS'),
    ('Bahrain', 'BH'),
    ('Bangladesh', 'BD'),
    ('Barbados', 'BB'),
    ('Belarus', 'BY'),
    ('Belgium', 'BE'),
    ('Belize', 'BZ'),
    ('Benin', 'BJ'),
    ('Bermuda', 'BM'),
    ('Bhutan', 'BT'),
    ('Bolivia', 'BO'),
    ('Bosnia and Herzegovina', 'BA'),
    ('Botswana', 'BW'),
    ('Bouvet Island', 'BV'),
    ('Brazil', 'BR'),
    ('British Indian Ocean Territory', 'IO'),
    ('Brunei Darussalam', 'BN'),
    ('Bulgaria', 'BG'),
    ('Burkina Faso', 'BF'),
    ('Burundi', 'BI'),
    ('Cambodia', 'KH'),
    ('Cameroon', 'CM'),
    ('Canada', 'CA'),
    ('Cape Verde', 'CV'),
    ('Cayman Islands', 'KY'),
    ('Central African Republic', 'CF'),
    ('Chad', 'TD'),
    ('Chile', 'CL'),
    ('China', 'CN'),
    ('Christmas Island', 'CX'),
    ('Cocos (Keeling) Islands', 'CC'),
    ('Colombia', 'CO'),
    ('Comoros', 'KM'),
    ('Congo', 'CG'),
    ('The Democratic Republic of Congo', 'CD'),
    ('Cook Islands', 'CK'),
    ('Costa Rica', 'CR'),
    ("Cote D'Ivoire", 'CI'),
    ('Croatia', 'HR'),
    ('Cuba', 'CU'),
    ('Cyprus', 'CY'),
    ('Czech Republic', 'CZ'),
    ('Denmark', 'DK'),
    ('Djibouti', 'DJ'),
    ('Dominica', 'DM'),
    ('Dominican Republic', 'DO'),
    ('Ecuador', 'EC'),
    ('Egypt', 'EG'),
    ('El Salvador', 'SV'),
    ('Equatorial Guinea', 'GQ'),
    ('Eritrea', 'ER'),
    ('Estonia', 'EE'),
    ('Ethiopia', 'ET'),
    ('Falkland Islands (Malvinas)', 'FK'),
    ('Faroe Islands', 'FO'),
    ('Fiji', 'FJ'),
    ('Finland', 'FI'),
    ('France', 'FR'),
    ('French Guiana', 'GF'),
    ('French Polynesia', 'PF'),
    ('French Southern Territories', 'TF'),
    ('Gabon', 'GA'),
    ('Gambia', 'GM'),
    ('Georgia', 'GE'),
    ('Germany', 'DE'),
    ('Ghana', 'GH'),
    ('Gibraltar', 'GI'),
    ('Greece', 'GR'),
    ('Greenland', 'GL'),
    ('Grenada', 'GD'),
    ('Guadeloupe', 'GP'),
    ('Guam', 'GU'),
    ('Guatemala', 'GT'),
    ('Guernsey', 'GG'),
    ('Guinea', 'GN'),
    ('Guinea-Bissau', 'GW'),
    ('Guyana', 'GY'),
    ('Haiti', 'HT'),
    ('Heard Island and Mcdonald Islands', 'HM'),
    ('Holy See (Vatican City State)', 'VA'),
    ('Honduras', 'HN'),
    ('Hong Kong', 'HK'),
    ('Hungary', 'HU'),
    ('Iceland', 'IS'),
    ('India', 'IN'),
    ('Indonesia', 'ID'),
    ('Iran', 'IR'),
    ('Iraq', 'IQ'),
    ('Ireland', 'IE'),
    ('Isle of Man', 'IM'),
    ('Israel', 'IL'),
    ('Italy', 'IT'),
    ('Jamaica', 'JM'),
    ('Japan', 'JP'),
    ('Jersey', 'JE'),
    ('Jordan', 'JO'),
    ('Kazakhstan', 'KZ'),
    ('Kenya', 'KE'),
    ('Kiribati', 'KI'),
    ('North Korea', 'KP'),
    ('South Korea', 'KR'),
    ('Kuwait', 'KW'),
    ('Kyrgyzstan', 'KG'),
    ('Lao', 'LA'),
    ('Latvia', 'LV'),
    ('Lebanon', 'LB'),
    ('Lesotho', 'LS'),
    ('Liberia', 'LR'),
    ('Libyan Arab Jamahiriya', 'LY'),
    ('Liechtenstein', 'LI'),
    ('Lithuania', 'LT'),
    ('Luxembourg', 'LU'),
    ('Macao', 'MO'),
    ('Macedonia', 'MK'),
    ('Madagascar', 'MG'),
    ('Malawi', 'MW'),
    ('Malaysia', 'MY'),
    ('Maldives', 'MV'),
    ('Mali', 'ML'),
    ('Malta', 'MT'),
    ('Marshall Islands', 'MH'),
    ('Martinique', 'MQ'),
    ('Mauritania', 'MR'),
    ('Mauritius', 'MU'),
    ('Mayotte', 'YT'),
    ('Mexico', 'MX'),
    ('Micronesia', 'FM'),
    ('Moldova', 'MD'),
    ('Monaco', 'MC'),
    ('Mongolia', 'MN'),
    ('Montserrat', 'MS'),
    ('Morocco', 'MA'),
    ('Mozambique', 'MZ'),
    ('Myanmar', 'MM'),
    ('Namibia', 'NA'),
    ('Nauru', 'NR'),
    ('Nepal', 'NP'),
    ('Netherlands', 'NL'),
    ('Netherlands Antilles', 'AN'),
    ('New Caledonia', 'NC'),
    ('New Zealand', 'NZ'),
    ('Nicaragua', 'NI'),
    ('Niger', 'NE'),
    ('Nigeria', 'NG'),
    ('Niue', 'NU'),
    ('Norfolk Island', 'NF'),
    ('Northern Mariana Islands', 'MP'),
    ('Norway', 'NO'),
    ('Oman', 'OM'),
    ('Pakistan', 'PK'),
    ('Palau', 'PW'),
    ('Panama', 'PA'),
    ('Papua New Guinea', 'PG'),
    ('Paraguay', 'PY'),
    ('Peru', 'PE'),
    ('Philippines', 'PH'),
    ('Pitcairn', 'PN'),
    ('Poland', 'PL'),
    ('Portugal', 'PT'),
    ('Puerto Rico', 'PR'),
    ('Qatar', 'QA'),
    ('Reunion', 'RE'),
    ('Romania', 'RO'),
    ('Russian Federation', 'RU'),
    ('RWANDA', 'RW'),
    ('Saint Helena', 'SH'),
    ('Saint Kitts and Nevis', 'KN'),
    ('Saint Lucia', 'LC'),
    ('Saint Pierre and Miquelon', 'PM'),
    ('Saint Vincent and the Grenadines', 'VC'),
    ('Samoa', 'WS'),
    ('San Marino', 'SM'),
    ('Sao Tome and Principe', 'ST'),
    ('Saudi Arabia', 'SA'),
    ('Senegal', 'SN'),
    ('Serbia and Montenegro', 'CS'),
    ('Seychelles', 'SC'),
    ('Sierra Leone', 'SL'),
    ('Singapore', 'SG'),
    ('Slovakia', 'SK'),
    ('Slovenia', 'SI'),
    ('Solomon Islands', 'SB'),
    ('Somalia', 'SO'),
    ('South Africa', 'ZA'),
    ('South Georgia and the South Sandwich Islands', 'GS'),
    ('Spain', 'ES'),
    ('Sri Lanka', 'LK'),
    ('Sudan', 'SD'),
    ('Suriname', 'SR'),
    ('Svalbard and Jan Mayen', 'SJ'),
    ('Swaziland', 'SZ'),
    ('Sweden', 'SE'),
    ('Switzerland', 'CH'),
    ('Syrian Arab Republic', 'SY'),
    ('Taiwan, Province of China', 'TW'),
    ('Tajikistan', 'TJ'),
    ('Tanzania', 'TZ'),
    ('Thailand', 'TH'),
    ('Timor-Leste', 'TL'),
    ('Togo', 'TG'),
    ('Tokelau', 'TK'),
    ('Tonga', 'TO'),
    ('Trinidad and Tobago', 'TT'),
    ('Tunisia', 'TN'),
    ('Turkey', 'TR'),
    ('Turkmenistan', 'TM'),
    ('Turks and Caicos Islands', 'TC'),
    ('Tuvalu', 'TV'),
    ('Uganda', 'UG'),
    ('Ukraine', 'UA'),
    ('United Arab Emirates', 'AE'),
    ('United Kingdom', 'GB'),
    ('United States', 'US'),
    ('United States Minor Outlying Islands', 'UM'),
    ('Uruguay', 'UY'),
    ('Uzbekistan', 'UZ'),
    ('Vanuatu', 'VU'),
    ('Venezuela', 'VE'),
    ('Viet Nam', 'VN'),
    ('Virgin Islands, British', 'VG'),
    ('Virgin Islands, U.S.', 'VI'),
    ('Wallis and Futuna', 'WF'),
    ('Western Sahara', 'EH'),
    ('Yemen', 'YE'),
    ('Zambia', 'ZM'),
    ('Zimbabwe', 'ZW');
  `);

  await db.run(`
  INSERT INTO car_brands (name, country_code) VALUES
    ('Acura', 'JP'),
    ('Alfa Romeo', 'IT'),
    ('Aston Martin', 'GB'),
    ('Audi', 'DE'),
    ('Bentley', 'GB'),
    ('BMW', 'DE'),
    ('Bugatti', 'FR'),
    ('Buick', 'US'),
    ('Cadillac', 'US'),
    ('Chevrolet', 'US'),
    ('Chrysler', 'US'),
    ('Citroën', 'FR'),
    ('Dacia', 'RO'),
    ('Daewoo', 'KR'),
    ('Daihatsu', 'JP'),
    ('Dodge', 'US'),
    ('Ferrari', 'IT'),
    ('Fiat', 'IT'),
    ('Ford', 'US'),
    ('Geely', 'CN'),
    ('Genesis', 'KR'),
    ('GMC', 'US'),
    ('Honda', 'JP'),
    ('Hyundai', 'KR'),
    ('Infiniti', 'JP'),
    ('Isuzu', 'JP'),
    ('Jaguar', 'GB'),
    ('Jeep', 'US'),
    ('Kia', 'KR'),
    ('Koenigsegg', 'SE'),
    ('Lamborghini', 'IT'),
    ('Lancia', 'IT'),
    ('Land Rover', 'GB'),
    ('Lexus', 'JP'),
    ('Maserati', 'IT'),
    ('Mazda', 'JP'),
    ('McLaren', 'GB'),
    ('Mercedes-Benz', 'DE'),
    ('Mini', 'GB'),
    ('Mitsubishi', 'JP'),
    ('Nissan', 'JP'),
    ('Opel', 'DE'),
    ('Peugeot', 'FR'),
    ('Porsche', 'DE'),
    ('Ram', 'US'),
    ('Renault', 'FR'),
    ('Rolls-Royce', 'GB'),
    ('Saab', 'SE'),
    ('SEAT', 'ES'),
    ('Škoda', 'CZ'),
    ('Smart', 'DE'),
    ('Subaru', 'JP'),
    ('Suzuki', 'JP'),
    ('Tesla', 'US'),
    ('Toyota', 'JP'),
    ('Volkswagen', 'DE'),
    ('Volvo', 'SE');
  `);

  await db.run(`
  INSERT INTO car_models (name, top_speed, "accel_0_to_100", handling, drivetrain, tyres, car_brand_id) VALUES 
    ('Skyline GTS-t Type M (R32)', 238, 610, 79, 'RWD', 'Performance', 41),
    ('Supra Mk4', 250, 490, 82, 'RWD', 'Performance', 55),
    ('RS6 Avant', 305, 360, 88, '4X4', 'Performance', 4),
    ('M3 E46', 250, 520, 85, 'RWD', 'Performance', 6),
    ('Impreza WRX STI', 244, 510, 80, '4X4', 'All-terrain', 52),
    ('Gallardo', 325, 390, 91, '4X4', 'Slicks', 31),
    ('Model S Plaid', 322, 199, 93, '4X4', 'Slicks', 54),
    ('911 GT3 RS', 312, 320, 95, 'RWD', 'Slicks', 44),
    ('Wrangler Rubicon', 180, 820, 60, '4X4', 'Offroad', 28),
    ('Civic Type R (FK8)', 272, 530, 83, 'FWD', 'Performance', 23),
    ('Golf GTI Mk7', 250, 630, 77, 'FWD', 'Performance', 56),
    ('208 GTi', 230, 690, 73, 'FWD', 'Standard', 43),
    ('Mustang GT', 250, 460, 80, 'RWD', 'Performance', 19),
    ('MX-5 Miata', 214, 670, 84, 'RWD', 'Standard', 36),
    ('Camaro SS', 290, 420, 79, 'RWD', 'Performance', 10),
    ('Cooper S', 235, 720, 76, 'FWD', 'Standard', 39),
    ('Giulia Quadrifoglio', 307, 390, 90, 'RWD', 'Slicks', 2),
    ('AMG A45 S', 270, 360, 86, '4X4', 'Performance', 38),
    ('Challenger SRT Hellcat', 326, 340, 75, 'RWD', 'Slicks', 16),
    ('i30 N', 250, 610, 78, 'FWD', 'Performance', 24),
    ('Clio RS', 220, 660, 74, 'FWD', 'Standard', 46),
    ('850 T5-R', 245, 640, 72, 'FWD', 'Standard', 57),
    ('Veyron 16.4', 407, 280, 91, '4X4', 'Slicks', 7),
    ('Agera RS', 447, 290, 96, 'RWD', 'Slicks', 30),
    ('P1', 350, 260, 97, 'RWD', 'Slicks', 37),
    ('Delta Integrale', 220, 690, 81, '4X4', 'All-terrain', 32),
    ('2CV', 115, 1850, 29, 'FWD', 'Standard', 12),
    ('Cybertruck', 210, 430, 78, '4X4', 'All-terrain', 54),
    ('Defender 110', 170, 1160, 52, '4X4', 'Offroad', 33),
    ('Swift Sport', 210, 840, 74, 'FWD', 'Standard', 53),
    ('DB11 V8', 301, 400, 88, 'RWD', 'Performance', 3),
    ('F-Type R AWD', 300, 390, 87, '4X4', 'Performance', 27),
    ('CTS-V', 320, 380, 82, 'RWD', 'Performance', 9),
    ('G70 3.3T', 270, 460, 81, 'RWD', 'Performance', 21),
    ('500 Abarth', 210, 750, 69, 'FWD', 'Standard', 18),
    ('Astra OPC', 250, 590, 76, 'FWD', 'Performance', 42),
    ('Copen', 180, 970, 67, 'FWD', 'Standard', 15),
    ('VehiCROSS', 190, 980, 58, '4X4', 'Offroad', 26),
    ('NSX (1991)', 270, 530, 84, 'RWD', 'Performance', 1),
    ('Q60 Red Sport', 250, 490, 79, 'RWD', 'Performance', 25),
    ('Stinger GT', 270, 480, 83, 'RWD', 'Performance', 29),
    ('300C SRT8', 265, 510, 74, 'RWD', 'Standard', 11),
    ('Regal GS', 250, 590, 73, 'FWD', 'Standard', 8),
    ('TRX', 190, 430, 65, '4X4', 'Offroad', 45),
    ('9-5 Aero', 250, 620, 70, 'FWD', 'Standard', 48),
    ('Octavia RS', 250, 600, 75, 'FWD', 'Standard', 50),
    ('Leon Cupra', 250, 590, 78, 'FWD', 'Performance', 49),
    ('Roadster', 175, 950, 68, 'RWD', 'Standard', 51),
    ('Lanos Sport', 185, 1150, 55, 'FWD', 'Standard', 14),
    ('Xingyue S', 210, 820, 66, 'FWD', 'Standard', 20),
    ('V12 Vantage', 330, 370, 89, 'RWD', 'Slicks', 3),
    ('S1 Quattro', 250, 550, 79, '4X4', 'Performance', 4),
    ('Continental GT W12', 333, 390, 85, '4X4', 'Performance', 5),
    ('i8', 250, 440, 86, '4X4', 'Performance', 6),
    ('Chiron', 420, 250, 96, '4X4', 'Slicks', 7),
    ('Corvette Z06 (C7)', 315, 300, 91, 'RWD', 'Slicks', 10),
    ('DS3 Racing', 235, 670, 74, 'FWD', 'Performance', 12),
    ('Sandero Stepway', 170, 1180, 55, 'FWD', 'Standard', 13),
    ('Terios', 160, 1250, 52, '4X4', 'All-terrain', 15),
    ('Viper GTS', 330, 330, 87, 'RWD', 'Slicks', 16),
    ('488 GTB', 330, 300, 94, 'RWD', 'Slicks', 17),
    ('Punto Abarth', 215, 740, 72, 'FWD', 'Performance', 18),
    ('Focus RS (Mk3)', 266, 460, 85, '4X4', 'Performance', 19),
    ('Yukon Denali', 180, 690, 63, '4X4', 'Standard', 22),
    ('S2000', 240, 620, 86, 'RWD', 'Performance', 23),
    ('Veloster N', 250, 570, 77, 'FWD', 'Performance', 24),
    ('FX50', 250, 550, 75, '4X4', 'Performance', 25),
    ('D-Max', 175, 1120, 60, '4X4', 'All-terrain', 26),
    ('XJ R', 280, 420, 83, 'RWD', 'Standard', 27),
    ('Grand Cherokee Trackhawk', 290, 370, 79, '4X4', 'All-terrain', 28),
    ('Ceed GT', 235, 620, 74, 'FWD', 'Performance', 29),
    ('Jesko', 480, 210, 99, 'RWD', 'Slicks', 30),
    ('Huracán EVO', 325, 290, 95, '4X4', 'Slicks', 31),
    ('Thema 8.32', 240, 760, 68, 'FWD', 'Standard', 32),
    ('Discovery Sport', 208, 910, 67, '4X4', 'Offroad', 33),
    ('RC F', 270, 430, 84, 'RWD', 'Performance', 34),
    ('Levante Trofeo', 304, 390, 81, '4X4', 'Performance', 35),
    ('3 MPS', 250, 580, 76, 'FWD', 'Performance', 36),
    ('720S', 341, 290, 97, 'RWD', 'Slicks', 37),
    ('G63 AMG', 240, 450, 78, '4X4', 'All-terrain', 38),
    ('JCW GP', 265, 510, 80, 'FWD', 'Performance', 39),
    ('Lancer Evolution IX', 250, 460, 85, '4X4', 'Performance', 40),
    ('370Z Nismo', 250, 510, 82, 'RWD', 'Performance', 41),
    ('Insignia OPC', 250, 560, 73, '4X4', 'Standard', 42),
    ('3008 Hybrid4', 206, 820, 69, '4X4', 'Standard', 43),
    ('Taycan Turbo S', 260, 230, 94, '4X4', 'Slicks', 44),
    ('1500 Rebel', 180, 680, 61, '4X4', 'Offroad', 45),
    ('Megane RS Trophy', 260, 550, 83, 'FWD', 'Performance', 46),
    ('Phantom', 250, 570, 70, 'RWD', 'Standard', 47),
    ('900 Turbo', 205, 840, 65, 'FWD', 'Standard', 48),
    ('Ibiza Cupra', 240, 640, 73, 'FWD', 'Performance', 49),
    ('Superb 280', 250, 610, 72, 'FWD', 'Standard', 50),
    ('ForTwo Brabus', 155, 920, 62, 'RWD', 'Standard', 51),
    ('Outback Wilderness', 193, 950, 64, '4X4', 'Offroad', 52),
    ('Jimny', 145, 1280, 59, '4X4', 'Offroad', 53),
    ('Model 3 Performance', 261, 330, 91, '4X4', 'Slicks', 54),
    ('Yaris GR', 230, 540, 84, '4X4', 'Performance', 55),
    ('Arteon R', 270, 430, 80, '4X4', 'Performance', 56),
    ('S60 Polestar Engineered', 250, 400, 85, '4X4', 'Performance', 57),
    ('Yaris (XP130)', 165, 1200, 60, 'FWD', 'Standard', 55),
    ('Corsa E', 161, 1150, 62, 'FWD', 'Standard', 42),
    ('Panda', 150, 1400, 55, 'FWD', 'Standard', 18),
    ('Twingo', 145, 1500, 53, 'FWD', 'Standard', 46),
    ('Fiesta Mk7', 160, 1100, 65, 'FWD', 'Standard', 19),
    ('Accent', 155, 1250, 58, 'FWD', 'Standard', 24),
    ('Rio', 158, 1300, 59, 'FWD', 'Standard', 29),
    ('Civic (EG6)', 170, 1000, 68, 'FWD', 'Standard', 23),
    ('Corolla E120', 170, 1150, 60, 'FWD', 'Standard', 55),
    ('Golf Mk4', 175, 1000, 63, 'FWD', 'Standard', 56),
    ('Megane Mk2', 170, 1200, 57, 'FWD', 'Standard', 46),
    ('206', 170, 1250, 56, 'FWD', 'Standard', 43),
    ('Fabia', 165, 1300, 55, 'FWD', 'Standard', 50),
    ('Punto', 168, 1220, 54, 'FWD', 'Standard', 18),
    ('Ka', 146, 1550, 50, 'FWD', 'Standard', 19),
    ('Micra (K12)', 155, 1350, 52, 'FWD', 'Standard', 41),
    ('Up! GTI', 196, 900, 65, 'FWD', 'Standard', 56),
    ('i10', 155, 1400, 53, 'FWD', 'Standard', 24),
    ('Twingo II', 150, 1480, 52, 'FWD', 'Standard', 46),
    ('Forfour', 155, 1450, 51, 'FWD', 'Standard', 51),
    ('Yaris Verso', 160, 1600, 50, 'FWD', 'Standard', 55),
    ('Picanto', 155, 1500, 52, 'FWD', 'Standard', 29),
    ('Spark', 150, 1550, 51, 'FWD', 'Standard', 10),
    ('Matiz', 145, 1600, 50, 'FWD', 'Standard', 14),
    ('Celerio', 150, 1550, 50, 'FWD', 'Standard', 53),
    ('Sandero', 155, 1500, 53, 'FWD', 'Standard', 13),
    ('Duster', 180, 1400, 56, '4X4', 'All-terrain', 13),
    ('Captur', 170, 1450, 54, 'FWD', 'Standard', 46),
    ('Kona', 160, 1500, 55, 'FWD', 'Standard', 24),
    ('Soul', 165, 1500, 54, 'FWD', 'Standard', 29),
    ('Polo Mk5', 170, 1350, 60, 'FWD', 'Standard', 56),
    ('Clio Campus', 160, 1400, 52, 'FWD', 'Standard', 46),
    ('Corsa D', 165, 1300, 55, 'FWD', 'Standard', 42),
    ('Swift (ZC31S)', 165, 1400, 53, 'FWD', 'Standard', 53),
    ('Yeti', 175, 1400, 55, '4X4', 'All-terrain', 50),
    ('Tiguan', 185, 1300, 58, '4X4', 'All-terrain', 56),
    ('X1', 190, 1250, 60, '4X4', 'Standard', 6),
    ('Qashqai', 185, 1350, 55, 'FWD', 'All-terrain', 41),
    ('CR-V', 185, 1400, 58, '4X4', 'All-terrain', 23),
    ('Rav4', 180, 1450, 56, '4X4', 'All-terrain', 55),
    ('Forester', 180, 1400, 57, '4X4', 'All-terrain', 52),
    ('Outback', 175, 1500, 56, '4X4', 'All-terrain', 52),
    ('Escalade', 180, 1500, 55, '4X4', 'All-terrain', 9),
    ('Sequoia', 175, 1500, 53, '4X4', 'All-terrain', 55),
    ('Cherokee', 180, 1450, 55, '4X4', 'All-terrain', 28),
    ('Pathfinder', 180, 1400, 56, '4X4', 'All-terrain', 41),
    ('Pajero', 175, 1500, 54, '4X4', 'All-terrain', 40),
    ('Compass', 175, 1500, 55, '4X4', 'All-terrain', 28),
    ('Vitara', 170, 1500, 53, '4X4', 'All-terrain', 53),
    ('Freelander', 170, 1500, 54, '4X4', 'All-terrain', 50);


  `);

  await db.run(`
  INSERT INTO tracks (name, length, num_corners, surface) VALUES
    ('Silverstone Circuit', 5891, 18, 'Asphalt'),
    ('Rally Finland', 20750, 34, 'Gravel'),
    ('Nürburgring Nordschleife', 20832, 73, 'Asphalt'),
    ('Monaco GP', 3337, 19, 'Asphalt'),
    ('Dakar Stage 5', 35000, 20, 'Sand'),
    ('Mount Panorama', 6213, 23, 'Asphalt'),
    ('Desert Drift', 4500, 14, 'Sand'),   
    ('Tokyo Street Circuit', 5120, 16, 'Asphalt'),
    ('Algarve Offroad', 6000, 22, 'Dirt'),
    ('Sahara Sprint', 8000, 10, 'Sand'),
    ('Canadian Rally', 12500, 26, 'Gravel'),
    ('Rainy Ring', 3000, 12, 'Asphalt'),
    ('Amazon Challenge', 9800, 17, 'Dirt'),
    ('Rocky Mountain Pass', 7200, 20, 'Gravel'),
    ('Savannah Run', 4100, 11, 'Dirt'), 
    ('Coastal Cruise', 5800, 15, 'Asphalt'),
    ('Urban Chaos', 4700, 18, 'Asphalt'),
    ('Forest Trail', 6300, 25, 'Dirt'),
    ('Dubai Desert Dash', 9000, 8, 'Sand'),
    ('Red Canyon Rally', 10400, 27, 'Gravel'),
    ('Barcelona GP Circuit', 4655, 16, 'Asphalt'),
    ('Hockenheimring', 4574, 17, 'Asphalt'),
    ('Imola Circuit', 4909, 19, 'Asphalt'),
    ('Zandvoort Circuit', 4259, 14, 'Asphalt'),
    ('Laguna Seca', 3602, 11, 'Asphalt'),
    ('Spa-Francorchamps', 7004, 20, 'Asphalt'),
    ('Paul Ricard Circuit', 5842, 15, 'Asphalt'),
    ('Interlagos', 4309, 15, 'Asphalt'),
    ('Suzuka Circuit', 5807, 18, 'Asphalt'),
    ('Austin GP Circuit', 5513, 20, 'Asphalt');
  `);


  await db.run(`
    INSERT INTO users (email, password, nickname) VALUES 
    ('1', '$2a$14$r5x7IwMVOKn5CtcBm3.NsuqQQbJW9.VH.PXfP7BpLxgQQxJBSM/fO', 'Christoffer'),
    ('2', '$2a$14$fRo/HOhOvPr6eEB0RNCTW.gmeALY7Xd6tqReGZuSror0YLRhvJz0G', 'Anders'),
    ('3', '$2a$14$Ud6m36ireNWjI4CkkDvbre5dioWchRGlItEnLwsVakRlY59ud3jS.', 'Lars'),
    ('4', '$2a$14$d61yXeN55pifZwuQUjIeN.mhbKRlkImjpiEwHL.xoiDGcIOn6ZzfG', 'Chris');
      
    `);
}
